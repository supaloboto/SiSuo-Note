import { ContextTracker, ExternalTokenizer, LRParser, LocalTokenGroup } from '@lezer/lr';
import { LRLanguage, indentNodeProp, delimitedIndent, foldNodeProp, foldInside, LanguageSupport } from '@codemirror/language';
import { styleTags, tags } from '@lezer/highlight';

// This file was generated by lezer-generator. You probably shouldn't edit it.
const noSemi = 94,
  insertSemi = 95,
  spaces = 97,
  newline = 98,
  LineComment = 1,
  BlockComment = 2;

//!trackNewline

const trackNewline = new ContextTracker({
  start: false,
  shift(context, term) {
    return term == LineComment || term == BlockComment || term == spaces
      ? context : term == newline
  },
  strict: false
});

const space = [9, 10, 11, 12, 13, 32, 133, 160];
const braceR = 125, semicolon = 59, slash = 47, star = 42;

const insertSemicolon = new ExternalTokenizer((input, stack) => {
  let { next } = input;
  if (next == braceR || next == -1 || stack.context)
    input.acceptToken(insertSemi);
}, { contextual: true, fallback: true });

const noSemicolon = new ExternalTokenizer((input, stack) => {
  let { next } = input, after;
  if (space.indexOf(next) > -1) return
  if (next == slash && ((after = input.peek(1)) == slash || after == star)) return
  if (next != braceR && next != semicolon && next != -1 && !stack.context)
    input.acceptToken(noSemi);
}, { contextual: true });

// This file was generated by lezer-generator. You probably shouldn't edit it.
const spec_Identifier = { __proto__: null, function: 12, true: 42, false: 42, this: 44, null: 46, super: 48, new: 74, void: 80, typeof: 82, delete: 84, var: 132, ref: 134, for: 140, in: 146, if: 150, else: 152, return: 156 };
const spec_PropertyName = { __proto__: null, get: 65, set: 67 };
const parser = LRParser.deserialize({
  version: 14,
  states: "MSQ`QQOOO#PQQOOP$^OQOOO$cO!bO'#CmO&OQQO'#CvO&`QQO'#DOO#PQQO'#DTO&gQQO'#DZO'rQtO'#D^O'yQQO'#D]O(OQtO'#EOO)tQtO'#EkO){QQO'#DjOOQp'#Ek'#EkOOQp'#Ei'#EiOOQO'#EP'#EPOOQO'#Eg'#EgOOQO'#ES'#ESQ`QQOOO#PQQO'#DQO*QQQO'#C`O*VQQO'#DoO*bQQO'#DsO*gQQO'#DxO*lQsO'#D{O+YQWO'#CyO+jQtO'#D^Q+tQSOOO,cQQO'#D[P,kO#tO'#C^POOO)C@U)C@UO#PQQO'#CoOOOO'#ET'#ETO,vO!bO,59XOOQp,59X,59XO-UQQO'#EUO-iQQO'#EpO.cQSO'#EpO$qQQO'#EpO.jQQO,59bO.oQQO'#EjO.rQQO'#EjO.zQQO,59TOOQp,59j,59jO/PQQO,59jO/WQtO,59oO/kQSO,59uO/rQQO'#EhO*VQQO'#EhO/}QQO,59PO#PQQO,5:UO`QQO,5:iO1^QQO,59wO2rQQO'#DSO2|QSO,59zO3RQQO,59zO#PQQO,59|O#PQQO,59|O#PQQO,59|O4`QQO,5:ROOQp,5:W,5:WOOQO'#Ev'#EvOOQO,5:j,5:jO#PQQO,5:UOOQO-E8Q-E8QO5mQtO,59lO,fQQO,58zO6QQQO'#CiO6wQWO'#DmO7OQrO'#EuO(kQrO,5:ZO7^QQO'#DuO`QQO,5:_O#PQQO'#DZO`QQO,5:dOOQO,5:g,5:gO#PQQO,5:gO7nQQO'#ErO3RQQO'#ErOOQO'#Er'#ErO8VQQO'#CzO$qQQO'#CzO8eQQO'#EqO8mQQO,59eO8rQQO'#EtO8zQQO,5:XO9PQSO'#CzO9_QQO'#CeO9pQQO,59vO,fQQO,59vPOOO'#ER'#ERP9uO#tO,58xPOOO,58x,58xO:QQSO,59ZOOOO-E8R-E8ROOQp1G.s1G.sO:vQSO,5:pO$qQQO,5:pO;QQQO,5:sO;]QQO'#EUOOQO-E8S-E8SO;jQQO,5;[O;rQSO,5;[O;yQQO,5;UOOQp1G.|1G.|O1eQQO7+%yO<UQQO'#EXO;|QQO,5;UOOQO-E8V-E8VOOQp1G.o1G.oOOQp1G/U1G/UOOQp1G/a1G/aO1eQQO,5:UO<jQQO'#EZO<xQQO,5;SO=QQQO,5;SOOQO1G.k1G.kO=]QtO1G/pOOQO1G0T1G0TOOQp1G/c1G/cO=pQtO1G/cO>TQSO'#EsO1eQQO'#EsO>_QQO,59nOOQp1G/f1G/fO?RQSO1G/fO@QQtO1G/hOA]QtO1G/hOAdQtO1G/hOB`Q`O'#D^OCXQ`O1G/mOC`Q`O'#EkOCgQtO1G/pOOQp1G/W1G/WO9pQQO1G.fOCzQQO'#EjO*VQQO'#EjO*VQQO'#DnODVQQO'#DnO*VQQO'#E[OD[QrO,5;aO1eQQO,5;aOOQO1G/u1G/uOE_Q`O,5:bOEiQSO,5:aOEpQQO,5:aO*VQQO,5:bOOQO1G/y1G/yOEwQQO1G0OO(OQtO1G0RO1eQQO,5:YOGqQSO,5;^O9pQQO,59fO$qQQO,59fOGxQSO,59fOHSQQO,5:YOH_QWO'#EVOHiQQO,5;]OOQp1G/P1G/PO6fQWO'#EYOHqQQO,5;`OOQp1G/s1G/sO,fQQO,59fOHyQQO'#EhOOQp1G/b1G/bO9pQQO1G/bPOOO-E8P-E8PPOOO1G.d1G.dOOOO1G.u1G.uOIUQSO1G0[OI`QQO1G0_O1eQQO,5:pOIkQQO1G0vOIsQQO1G0pOI{QSO<<IeOJVQQO,5:sO*VQQO,5:sOJbQSO1G/pOJlQQO,5:uO*VQQO,5:uOOQO-E8X-E8XOJwQQO1G0nO1eQQO1G0nOKPQQO'#EWOKWQQO,5;_OK`QSO,5;_OOQp1G/Y1G/YOOQp7+%Q7+%QOKjQ`O,59oO#PQQO7+%XOKqQ`O,59lOOQO7+$Q7+$QO1eQQO,5;UOKxQQO,5;UOLTQQO,5:YO*VQQO,5:YOL`QrO,5:vOOQp-E8Y-E8YOLnQtO1G0{O#PQQO1G/|OL{QQO1G/{OMSQSO1G/{OMZQQO1G/{OMbQrO1G/|O`QQO7+%jOOQO7+%m7+%mOMsQSO1G/tOOQO1G0x1G0xOOQO1G/Q1G/QOM}QSO1G/QONXQQO1G/tO1eQQO7+%`ONdQQO'#CzO1eQQO'#CzOOQO,5:q,5:qOOQO-E8T-E8TOOQO,5:t,5:tOOQO-E8W-E8WO9pQQO1G/QO1eQQO,5;SOOQp7+$|7+$|ONrQQO7+&[O1eQQO1G0_ONzQQO1G0_O! VQQO7+&YO1eQQO1G0aO! _QQO1G0aO! jQSO7+&YO! tQSO,5:rO1eQQO,5:rOOQO-E8U-E8UO!!OQQO1G0yO!!WQ`O1G/pO!!_Q`O1G/cO!!}Q`O1G/hO!#[Q`O1G/hO!$QQ`O1G/hO!$_QtO<<HsO!$rQSO1G0pO1eQQO1G0pO1eQQO1G/tO!$|QQO1G/tO1eQQO1G0bO!%XQrO7+&gO!%dQSO7+%hO!%kQSO7+%gO!%rQQO7+%gO!%yQSO7+%gOOQO7+%g7+%gO#PQQO7+%hOOQO<<IU<<IUO!&QQSO<<HzO1eQQO,59fOOQO7+$l7+$lO!&[QSO1G0nO!&fQQO<<IvO!&nQSO7+%yO1eQQO7+%yO!&xQSO7+%{O1eQQO7+%{O!'SQQO<<ItO!'[QSO1G0^O!'fQSO7+&[O!'pQSO7+%`O1eQQO7+%`O!'zQtO7+%|OOQO<<IS<<ISO!(XQQO<<IRO!(`QSO<<IROOQO<<IR<<IRO!(gQSO<<ISO!(nQSO<<IeO!(xQSO<<IgO!)SQ`O<<HsO!)ZQSO<<HzO!)eQSOAN>mOOQOAN>mAN>mOOQOAN>nAN>nOOQOG24XG24XO4`QQO'#DTO4`QQO'#DQO!)lQSO'#D^O!*}QtO'#D^O!,SQSO'#D^O1eQQO,5:UO4`QQO,5:UO3RQQO,5:UO!-qQQO,59wO!/SQQO,59wO!0eQQO,59wO1eQQO,59|O4`QQO,59|O3RQQO,59|O1eQQO,59|O4`QQO,59|O3RQQO,59|O1eQQO,59|O4`QQO,59|O3RQQO,59|O1eQQO,5:UO!0lQtO,59lO!1SQSO,59lO!1ZQtO,59oO!1qQSO,59oO!1xQQO'#ErO!2WQtO1G/pO!2nQSO1G/pO!2uQtO1G/cO!3]QSO1G/cO!3dQtO1G/hO!4`QSO1G/hO!5OQtO1G/hO!5lQSO1G/hO!5sQtO1G/pO1eQQO7+%XO4`QQO7+%XO3RQQO7+%XO!6ZQtO<<HsO!6qQSO<<HsO1eQQO'#DTO3RQQO'#DTO!6xQQO'#D]O!6}QQO'#D]O!7SQQO'#D]O!7XQtO'#EkO!8TQSO'#EkO!8[QQO'#DjO!8aQQO'#DjO!8fQQO'#DjO1eQQO'#DQO3RQQO'#DQO!8kQ`O1G/mO!8rQ`O1G/mO!8yQ`O1G/mO!9QQSO'#D^O4`QQO,5:RO4`QQO,5:RO4`QQO,5:R",
  stateData: "!9c~O#TOS#UOSPOS#VQQ~OTWOUdOWVO[SO_]O`]Oe]Of]Og]Oh]Oi]OlTOucOxUOyUOzUO{UO|UO!deO!eeO!f_O!hfO!mgO!phO#`RO~OTjOUlOWVO[SO_]O`]Oe]Of]Og]Oh]Oi]OliOucOxUOyUOzUO{UO|UO#`RO~O#VmO~OdoO#apO#bpO#crO~OT'VOUlOWVO[SO_]O`]Oe]Of]Og]Oh]Oi]OliOu(VOx'{Oy'{Oz'{O{'{O|'{O#`RO~OYvOksOZ#^PZ#dP~P$qOb{O~P`OT'TOY!QOV#[P~P#SO!_!SOW#_X[#_X^#]X|#_X!R!QX!T#_X!V#_X!W#_X!X#_X!Y#_X![#_X!f#_X#R#_X~Os!TO~P&tO!R!UO~OW!VO[!XO|!ZO!T!WO!V!YO!W!YO!X!YO!Y![O![!]O!f!_O#R!_O~O!_!SOW#_X[#_X|#_X!T#_X!V#_X!W#_X!X#_X!Y#_X![#_X!f#_X#R#_X#P#_XV#_Xb#_X~O^!SO~P(sO^!aO~OT!dO~OT^O[!eOl!fO~OW!iO~OW!kO~O!f!_O#Q!nO#R!_O~O[!pO_!qO`!qOp!xOq!xO~OY!sOo!oOb#ePb#hP~P*wO^#]X!R!QX~P(sOW!VO[!XO|!ZO!T!WO!V!YO!W!YO!X!YO!Y![O![!]O~OT!{OW!yO~O#W!|O#X!|O#Y#OO~OdoO#apO#bpO#c#RO~OY#TOZ!xXZ!{Xk!xXk!{X~P$qOk#VOZ#dX~OW!VO[!XOk#VO|'aO!T!WO!V'^O!W'^O!X'^O!Y'dO![(]O~OZ#dX~P-qOZ#[O~O^#]Ok#^OZ#^X~OZ#aO~Ob#bO~P`O!fwa#Rwa#PwaVwabwa~P+tOV#cO~P+tO^#dOk#eOV#[X~OV#hO~OTjOUlOWVO[SO_]O`]Oe]Of]Og]Oh]Oi]OucOxUOyUOzUO{UO|UO#`RO~OlTO~P0SOT'UOUlOWVO[SO_]O`]Oe]Of]Og]Oh]Oi]OliOu(VOx'{Oy'{Oz'{O{'{O|'{O#`RO~OY#nOV#gP~P1eOo#pO~OT([OUlOWVO[SO_]O`]Oe]Of]Og]Oh]Oi]OliOu(WOx'|Oy'|Oz'|O{'|O|'|O#`RO~OT#uOUlOWVO[SO_]O`]Oe]Of]Og]Oh]Oi]OliOu'SOx'ROy'ROz'RO{'RO|'RO#`RO~O!fta#Rta#PtaVtabta~P+tOT^OY#|O[!eOk#^Ol!fOZ#^P~OY#}O[!pO_!qO`!qOo'lO~Ob#hP~P6fO^$ROk$PO!f#iX#R#iX~OT$TO!d$WO!eeO!f$VO~P#SO^$[OW#fXb!bXb#fXk!bXk#fXs#fX~OW!yOs$_ObnXknX~Ok$bOb#eX~Ob$dO~Ok$eOb#hX~Ob$gO~O[!pO_!qO`!qOo!qO~OT^OY!QO[!eOl!fOV#[P~OlTO~O#W!|O#X!|O#Y$mO~Ob$nO~P+tOW!VO[!XO|'aO!T!WO!V'^O!W'^O!X'^O!Y'dO![(]O~OZ!xak!xa~P:XO^#]OZ!{ak!{a~OY$qOZ!xXk!xX~P1eOk#VOZ#da~OZ#da~P-qO^#]Ok#^OZ#^a~OT^OY$vO[!eOl!fOZ!{Xk!{X~OT^OY$yO[!eOl!fO~Ok#eOV#[a~O^$|Ok#eOV#[a~O!f!^i#R!^i#P!^iV!^ib!^i~P+tO!f!Pi#R!Pi#P!PiV!Pib!Pi~P+tOk$}OV#gX~P:XOV%QO~OW!VO[!XO|'cO!T!WO!V'`O!W'`O!X'`O!Y'fO![(_O~OZ%RO~P>dOW!VO[!XO!T!WO|!Ui!Y!Ui![!Ui!f!Ui#R!UiZ!Uik!UiV!Uib!Ui~O!V!Ui!W!Ui!X!Ui#P!Ui~P?YOW!VO[!XO!T!WO!V!YO!W!YO!X!YO!Y!Ui![!Ui!f!Ui#R!Ui#P!UiV!Uib!Ui~O|!Ui~P@bO|!ZO~P@bO!_'XOW#_X[#_X|#_X!T#_X!V#_X!W#_X!X#_X!Y#_X![#_X!]#_X~O^#]X!R!QX~PAkOW!VO[!XO|'bO!T!WO!V'_O!W'_O!X'_O!Y'eO![(^O~O!]%TO~PBjO^'XO~PAkO!f!^i#R!^i#P!^ib!^iV!^i~P+tO^%WOk#^OZ#^X~Os%ZO~Ok$PO!f#ia#R#ia~O!_!SOW#_X[#_X^#]X|#_X!R!QX!T#_X!V#_X!W#_X!X#_X!Y#_X![#_X~O!k%_O!f#_X~PDgO!f%`O~P+tO!f%bO~P#PO!n%dOT!liU!liW!li[!li_!li`!lie!lif!lig!lih!lii!lil!liu!lix!liy!liz!li{!li|!li!d!li!e!li!f!li!h!li!m!li!p!li#P!li#`!lib!li~OZ%gO~P>dObnakna~P:XO^%kOb!bak!ba~OY%mOo!qO~P*wOk$bOb#ea~Ok$eOb#ha~O^%sOk#eOV#[X~OZ!xik!xi~P:XO^#]OZ!{ik!{i~Ok#VOZ#di~Ok#^OZ#^i~OZ!^ik!^i~P:XO^%vOZ!{ak!{a~Ok#eOV!^i~P:XO^%yOV!}ak!}a~Ok#eOV#[i~OY%}O~P1eOk$}OV#ga~Ok$}OV#ga~P:XO!]wa~PBjO!]ta~PBjO^&XOk#^OZ#^a~O^&YOb!bak!ba~O^&[Ok#Oa!f#Oa#R#Oa~Ok$PO!f#ii#R#ii~P:XO!f&`O~P#PO!f&`O~P+tOV&bO~P#PO^$ROk$PO!k&cO!f#iX#R#iX~Ob!bik!bi~P:XObnikni~P:XO^%kOb!bik!bi~OW!yOs&fObnXknX~Ok#^OZ#^q~O^&kOZ!{ik!{i~Ok#eOV#[q~O^&mOV!}ik!}i~Ok#eOV#[q~P:XOV!zak!za~P:XOk$}OV#gi~O!]!^i~PBjO!]!Pi~PBjOW!VO[!XO!T!WO|!Ui!Y!Ui![!Ui!]!Ui~O!V!Ui!W!Ui!X!Ui~P!!fO!V'_O!W'_O!X'_O~P!!fOW!VO[!XO|'bO!T!WO!V'_O!W'_O!X'_O~O!Y!Ui![!Ui!]!Ui~P!#iO!f!Zy#R!Zy#P!ZyV!Zyb!Zy~P+tOk#^OZ#^i~P:XO^&rOb!bik!bi~Ok$PO!f#iq#R#iq~OV&tO~P+tO!f&uO~P+tOV&wO~P#POV&wO~P+tOb!^ik!^i~P:XOk#eOV#[i~P:XOk#^OZ#^y~OZ!{qk!{q~P:XOV!}qk!}q~P:XOk#eOV#[y~OV!zik!zi~P:XOk#^OZ#^q~P:XOb!bqk!bq~P:XOk#Oq!f#Oq#R#Oq~P:XOV'OO~P#POV'OO~P+tOV'PO~P+tOZ!{yk!{y~P:XOV!}yk!}y~P:XO!]!Zy~PBjOb!byk!by~P:XOV'QO~P+tOV#]XV#_Xk#]X~PDgO!_'WOW#_XZ#_X[#_Xk#_X|#_X!T#_X!V#_X!W#_X!X#_X!Y#_X![#_XV#_X!f#_X#R#_Xb#_X~O^#]X!R!QX~P!)yO!_'WOW#_XZ#_X[#_Xk#_X|#_X!T#_X!V#_X!W#_X!X#_X!Y#_X![#_Xb#_X~OZ#]X^#]Xk#]X!R!QXb#]X~P!+XOT'UOUlOWVO[SO_]O`]Oe]Of]Og]Oh]Oi]Ou(VOx'{Oy'{Oz'{O{'{O|'{O#`RO~OlTO~P!,gOT#uOUlOWVO[SO_]O`]Oe]Of]Og]Oh]Oi]Ou'SOx'ROy'ROz'RO{'RO|'RO#`RO~OlTO~P!-xOT([OUlOWVO[SO_]O`]Oe]Of]Og]Oh]Oi]Ou(WOx'|Oy'|Oz'|O{'|O|'|O#`RO~OlTO~P!/ZOZtaktaVtabta!fta#Rta~P:XOZta~P>dOZwakwaVwabwa!fwa#Rwa~P:XOZwa~P>dO^$[Ob!bXk!bXs#fX~OZ!^ik!^iV!^ib!^i!f!^i#R!^i~P:XOZ!^i~P>dOZ!Pik!PiV!Pib!Pi!f!Pi#R!Pi~P:XOZ!Pi~P>dO!V'^O!W'^O!X'^O~P?YOW!VO[!XO!T!WO!V'`O!W'`O!X'`OZ!Ui!Y!Ui![!Ui~O|!Ui~P!3qOW!VO[!XO|'aO!T!WO!V'^O!W'^O!X'^O~OZ!Uik!Ui!Y!Ui![!UiV!Uib!Ui!f!Ui#R!Ui~P!4gO|'cO~P!3qOZ!^ik!^iV!^i!f!^i#R!^ib!^i~P:XOZ!Zyk!ZyV!Zyb!Zy!f!Zy#R!Zy~P:XOZ!Zy~P>dO!R'ZO~O!R'[O~O!R']O~O^'WO~P!)yO!_'YOW#_XZ#_X[#_X|#_X!T#_X!V#_X!W#_X!X#_X!Y#_X![#_X~O^'YO~P!7`O^'gO~O^'XO~O^'YO~O!]'vO~PBjO!]'wO~PBjO!]'xO~PBjO^#]X!R!QX~P!7`O#VP_!T!Vi~",
  goto: "@w#kPP#lP#oPPPP#yPPP&bPPP(pP*qPPPPPP(pPP(p*uPPP*{P(pP+l(pPPPPP-a(p(p/eP1lP(pPPPP(pPP(pP(p&b3s3zPPP#oP4X4XP#oPP#oP#o#o#oP4[4b4l4r5Q5W5b5{6R6gPPPPPPPPPP6r7U7Y:h:lPPPP?{@O@R@`@c@g@kRnQa`OTb|!T!j!l%d!^XOPTUVbco|!S!T!U!Y!Z![!a!i!j!k!l!n$V%T%_%`%b%d&`&c&uQ!zlQ#z!dS$^!r%lQ$k!{Q%r$h!p'}Ssv!V!s#T#V#]#d#n$R$[$_$q$|$}%W%k%m%s%v%y%}&X&Y&[&f&k&m&r'W'Z'^'a'd'g'v'{(Vh(O!]'R'S'X'['_'b'e'w(](^(_e(P!X!p'Y']'`'c'f'x'|(W%i^OPSTUVbceosv|!Q!S!T!U!V!X!Y!Z![!]!a!e!i!j!k!l!n!p!s!y#T#V#]#^#d#e#n#|#}$P$R$V$W$[$_$q$v$y$|$}%T%W%Z%_%`%b%d%k%m%s%v%y%}&X&Y&[&`&c&f&k&m&r&u'R'S'W'X'Y'Z'[']'^'_'`'a'b'c'd'e'f'g'v'w'x'{'|(V(W(](^(_$}]OPSTUVbcosv|!S!T!U!V!X!Y!Z![!]!a!i!j!k!l!n!p!s#T#V#]#d#n$R$V$[$_$q$|$}%T%W%_%`%b%d%k%m%s%v%y%}&X&Y&[&`&c&f&k&m&r&u'R'S'W'X'Y'Z'[']'^'_'`'a'b'c'd'e'f'g'v'w'x'{'|(V(W(](^(_TpRqQ!tiR%n$b``OTb|!T!j!l%dW#k!U'Z'[']Q$j!zQ%V#zQ%h$^Q%t$kR&g%r$W!^Yku}!O#P#S#Y#i#l#m#q#r#s#t#v#x$U$Z$]$`$o$t$w%P%S%^%a%f%i%{%|&Q&R&S&T&U&V&W&^&_&a&e&h&j&l&o&p&q&s&v&x&y&z&{&|&}'j'k'm'n'o'p'q'r's't'u'y'z(X(Y(ZX#y!c%U'h'i$|]OPSTUVbcosv|!S!T!U!V!X!Y!Z![!]!a!i!j!k!l!n!p!s#T#V#]#d#n$R$V$[$_$q$|$}%T%W%_%`%b%d%k%m%s%v%y%}&X&Y&[&`&c&f&k&m&r&u'R'S'W'X'Y'Z'[']'^'_'`'a'b'c'd'e'f'g'v'w'x'{'|(V(W(](^(_R!lg!^XOPTUVbco|!S!T!U!Y!Z![!a!i!j!k!l!n$V%T%_%`%b%d&`&c&u!p'}Ssv!V!s#T#V#]#d#n$R$[$_$q$|$}%W%k%m%s%v%y%}&X&Y&[&f&k&m&r'W'Z'^'a'd'g'v'{(Vh(O!]'R'S'X'['_'b'e'w(](^(_e(P!X!p'Y']'`'c'f'x'|(W!^ZOPTUVbco|!S!T!U!Y!Z![!a!i!j!k!l!n$V%T%_%`%b%d&`&c&uh#w!]'R'S'X'['_'b'e'w(](^(_!p(QSsv!V!s#T#V#]#d#n$R$[$_$q$|$}%W%k%m%s%v%y%}&X&Y&[&f&k&m&r'W'Z'^'a'd'g'v'{(Ve(R!X!p'Y']'`'c'f'x'|(WS!vi!fR%p$e``OTb|!T!j!l%dR$V!iR!jfQ!}mR$l!}QbOQ|TT!bb|QqRR#QqQtSU#Wt#X$rQ#XuR$r#YQ$c!tR%o$cQ%O#mS&O%O&PR&P%PSyS!eS#_x#{Y#`y#_$s%u&iS$s#Z%XQ%u&WR&i&pQ$f!vR%q$fS#f!P$iW$z#f${%x&nQ${#gS%x$w&hR&n%{S$Q!g%cS%]$Q&]R&]%^WaOTb|Q#j!TQ$X!jQ$Y!lR&d%dT!RV!y![[OPTUbco|!S!T!U!Y!Z![!a!i!j!k!l!n$V%T%_%`%b%d&`&c&uQxSQ!PVQ!geQ#UsQ#ZvQ#g!QQ#{!eQ$a!sQ$i!yQ$p#TQ$u#^Q$x#eQ%X#|Q%Y#}Q%[$PQ%c$WQ%j$_Q%w$vQ%z$yQ&Z%Z!d(S!V#V#]#d#n$R$[$q$|$}%W%k%m%s%v%y%}&X&Y&[&f&k&m&r'W'Z'^'a'd'g'v'{(Vh(T!]'R'S'X'['_'b'e'w(](^(_e(U!X!p'Y']'`'c'f'x'|(WTzS!e`YOTb|!T!j!l%dQkPQuSQ}US!OV!kQ!ccQ#PoS#Ss#VQ#YvQ#i!SQ#l!UQ#m!VQ#q!XU#r!Y'^'`Q#s!ZQ#t![Q#v!]Q#x!aQ$U!iQ$Z!nQ$]!pS$`!s%mS$o#T$qQ$t#]Q$w#dQ%P#nQ%S'RQ%U'SQ%^$RQ%a$VQ%f$[S%i$_&fQ%{$|Q%|$}Q&Q'XQ&R'[Q&S'_Q&T'bQ&U'eQ&V%TQ&W%WQ&^%_Q&_%`Q&a%bQ&e%kQ&h%sQ&j%vQ&l%yQ&o%}Q&p&XQ&q&YQ&s&[Q&v&`Q&x&cQ&y&kQ&z&mQ&{'wQ&|&rQ&}&uQ'h(VQ'i(WQ'j'{Q'k'|Q'm'WQ'n'YQ'o'ZQ'p']Q'q'aQ'r'cQ's'dQ't'fQ'u'gQ'y'vQ'z'xQ(X(]Q(Y(^R(Z(_RwSR!uiQ!riS$O!f$eQ$h!xR%l$bR#o!VT!wi!fT!he$WQ!`YQ!mhQ$S!hR%e$Z",
  nodeNames: "⚠ LineComment BlockComment Script FunctionDeclaration Identifier function ) ( ParamList ... ] [ ArrayPattern = Number String TemplateString } Interpolation ${ BooleanLiteral this null super RegExp ArrayExpression , { ObjectExpression Property PropertyName get set Block : NewExpression new ArgList UnaryExpression void typeof delete LogicOp ArithOp ParenthesizedExpression FunctionExpression ArrowFunction ParamList => MemberExpression . BinaryExpression ArithOp ArithOp ArithOp CompareOp ConditionalExpression LogicOp LogicOp AssignmentExpression UpdateOp CallExpression ObjectPattern PatternProperty VariableDeclaration var ref ; ForStatement for ForSpec ForInSpec in IfStatement if else ReturnStatement return LabeledStatement ExpressionStatement EmptyStatement SingleExpression",
  maxTerm: 118,
  context: trackNewline,
  nodeProps: [
    ["group", -9, 4, 34, 65, 69, 74, 77, 79, 80, 81, "Statement", -21, 5, 15, 16, 17, 21, 22, 23, 24, 25, 26, 29, 36, 39, 45, 46, 47, 50, 52, 57, 60, 62, "Expression"],
    ["openedBy", 7, "(", 11, "[", 18, "{"],
    ["closedBy", 8, ")", 12, "]", 28, "}"]
  ],
  skippedNodes: [0, 1, 2, 83],
  repeatNodeCount: 10,
  tokenData: "5c~RvXY#iYZ#zZ[#i]^#zpq#iqr$Prs$ftu&^uv'Twx'bxy)Tyz)Yz{)_{|)g|})o}!O)g!O!P)t!P!Q+b!Q!R0|!R![1n![!]4V!]!^4^!^!_$X!_!`4c!`!a$X!a!b4s!c!}&^!}#O4x#P#Q4}#R#S&^#S#T5S#T#o&^#o#p5X#q#r5^$f$g#i$g;'S&^;'S;=`&}<%lO&^~#nS#T~XY#iZ[#ipq#i$f$g#i~$PO#U~|$UP{S!_!`$Xx$^P!Yx!_!`$ax$fO!Yx~$kW`~OY$fZr$frs%Ts#O$f#O#P%Y#P;'S$f;'S;=`&W<%lO$f~%YO`~~%]RO;'S$f;'S;=`%f;=`O$f~%kX`~OY$fZr$frs%Ts#O$f#O#P%Y#P;'S$f;'S;=`&W;=`<%l$f<%lO$f~&ZP;=`<%l$f!^&eWTtohtu&^!Q![&^!c!}&^#R#S&^#T#o&^$g;'S&^;'S;=`&}<%lO&^!^'QP;=`<%l&^~'YP!W~!_!`']x'bO!_x~'gW`~OY'bZw'bwx%Tx#O'b#O#P(P#P;'S'b;'S;=`(}<%lO'b~(SRO;'S'b;'S;=`(];=`O'b~(bX`~OY'bZw'bwx%Tx#O'b#O#P(P#P;'S'b;'S;=`(};=`<%l'b<%lO'b~)QP;=`<%l'b~)YOW~~)_OV~~)dP!X~!_!`']~)lP|~!_!`']~)tOk~~)yQ!Tx!O!P*P!Q![*[d*SP!O!P*Vd*[OYd~*aS_~!Q![*[!g!h*m#R#S*[#X#Y*m~*pS{|*|}!O*|!Q![+V#R#S+V~+PQ!Q![+V#R#S+V~+[Q_~!Q![+V#R#S+V~+g]!VxOY,`Zz,`z{.}{!P,`!P!Q/q!Q!_,`!_!`0Y!`!},`!}#O-i#O#P.h#P;'S,`;'S;=`.w<%lO,`S,eXiSOY,`Z!P,`!P!Q-Q!Q!},`!}#O-i#O#P.h#P;'S,`;'S;=`.w<%lO,`S-VUiS#Z#[-Q#]#^-Q#a#b-Q#g#h-Q#i#j-Q#m#n-QS-lVOY-iZ#O-i#O#P.R#P#Q,`#Q;'S-i;'S;=`.b<%lO-iS.USOY-iZ;'S-i;'S;=`.b<%lO-iS.eP;=`<%l-iS.kSOY,`Z;'S,`;'S;=`.w<%lO,`S.zP;=`<%l,`~/UX#V~iSOY,`Z!P,`!P!Q-Q!Q!},`!}#O-i#O#P.h#P;'S,`;'S;=`.w<%lO,`~/vSP~OY/qZ;'S/q;'S;=`0S<%lO/q~0VP;=`<%l/q|0aX!_xiSOY,`Z!P,`!P!Q-Q!Q!},`!}#O-i#O#P.h#P;'S,`;'S;=`.w<%lO,`~1RX_~!O!P*[!Q![1n!g!h*m#R#S1n#U#V2[#X#Y*m#b#c2V#c#d2y#l#m3b~1sU_~!O!P*[!Q![1n!g!h*m#R#S1n#X#Y*m#b#c2V~2[O_~~2_R!Q!R2h!R!S2h#R#S2h~2mS_~!Q!R2h!R!S2h#R#S2h#b#c2V~2|Q!Q!Y3S#R#S3S~3XR_~!Q!Y3S#R#S3S#b#c2V~3eS!Q![3q!c!i3q#R#S3q#T#Z3q~3vT_~!Q![3q!c!i3q#R#S3q#T#Z3q#b#c2V|4^Os[!]p~4cO!f~~4hQ^~!_!`$X!`!a4n~4sO!R~~4xO![~~4}O[~~5SOZ~~5XO#`~~5^Ol~~5cOb~",
  tokenizers: [noSemicolon, 2, 3, 4, 5, insertSemicolon, new LocalTokenGroup("!W~RRtu[#O#Pg#S#T!Q~_P#o#pb~gOd~~jRO;'Ss;'S;=`x;=`Os~xO#a~~}P#a~;=`<%ls~!VO#c~~", 53, 110), new LocalTokenGroup("j~RQYZXz{^~^O#X~~aP!P!Qd~iO#Y~~", 25, 100)],
  topRules: { "Script": [0, 3], "SingleExpression": [1, 82] },
  specialized: [{ term: 5, get: (value) => spec_Identifier[value] || -1 }, { term: 31, get: (value) => spec_PropertyName[value] || -1 }],
  tokenPrec: 3232
});

const ScriptLang = LRLanguage.define({
  parser: parser.configure({
    props: [
      indentNodeProp.add({
        Application: delimitedIndent({ closing: "}", align: false })
      }),
      foldNodeProp.add({
        Application: foldInside
      }),
      styleTags({
        // 关键字
        var: tags.definitionKeyword,
        ref: tags.definitionKeyword,
        function: tags.definitionKeyword,
        if: tags.keyword,
        else: tags.keyword,
        for: tags.keyword,
        while: tags.keyword,
        return: tags.keyword,
        // 变量名
        Identifier: tags.variableName,
        // 变量类型
        BooleanLiteral: tags.bool,
        Number: tags.number,
        String: tags.string,
        // 括号
        "{ }": tags.paren,
        "( )": tags.brace,
        "[ ]": tags.squareBracket,
        // 注释
        LineComment: tags.lineComment,
      })
    ]
  }),
  languageData: {
    commentTokens: { line: "//" }
  }
});
function ScriptLangSupport() {
  return new LanguageSupport(ScriptLang);
}

export { ScriptLangSupport, ScriptLang };
